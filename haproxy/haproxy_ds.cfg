#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
        # ssl to set
        tune.ssl.default-dh-param  1024

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen  status
        mode http
        bind *:3753    
        stats enable   
        stats auth admin:admin    
        stats uri /admin    
        stats hide-version        
        stats admin if TRUE       
        stats refresh 15s

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  main *:80
frontend  main
        bind *:80
        bind *:443 ssl crt /etc/ssl/private/web.pem
        redirect scheme https if !{ ssl_fc }
        mode http
        option forwardfor #使后端server获取到客户端的真实IP
    acl url_static       path_beg       -i /shell /tools
    acl url_static       path_end       -i .jpg .gif .png .css .js .sh .gz

    use_backend static          if url_static
    default_backend             web

#frontend localhost
#    bind *:80
#    bind *:443 ssl crt /etc/ssl/xip.io/xip.io.pem
#    redirect scheme https if !{ ssl_fc }
#    mode http
#    default_backend nodes

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend static
    balance     roundrobin
    server      varnish01 10.211.18.3:6081 check
    server      varnish02 10.211.18.4:6081 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend web
    balance     roundrobin
        cookie SERVERID insert indirect nocache
        option httpchk GET /lb_check/check.html # 开启对后端服务器的健康检测，通过GET /test/index.php来判断后端服务器的健康情况
        http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    server  web01 10.211.18.5:80 cookie s1 check inter 2000 rise 3 fall 3 weight 1
    server  web02 10.211.18.6:80 cookie s2 check inter 2000 rise 3 fall 3 weight 1
        server  bak03 10.211.18.6:80 cookie b3 check inter 1500 rise 3 fall 3 backup

# server语法：server [:port] [param*]
# 使用server关键字来设置后端服务器；为后端服务器所设置的内部名称[php_server_1]，该名
#称将会呈现在日志或警报中、后端服务器的IP地址，支持端口映射[10.12.25.68:80]、指定该
#服务器的SERVERID为1[cookie 1]、接受健康监测[check]、监测的间隔时长，单位毫秒[inter 
#2000]、监测正常多少次后被认为后端服务器是可用的[rise 3]、监测失败多少次后被认为后端
#服务器是不可用的[fall 3]、分发的权重[weight 2]、最为备份用的后端服务器，当正常的服
#务器全部都宕机后，才会启用备份服务器[backup]
