---
# author: lework

- name: replication | Install MySQL-python package.
  yum: name={{ item }} state=latest
  with_items:
   - MySQL-python
  when: mysql57_replication_role is defined and mysql57_replication_role != ''

- name: replication | Ensure replication user exists on master.
  mysql_user:
    name: "{{ mysql57_replication_user.name }}"
    host: "{{ mysql57_replication_user.host | default('%') }}"
    password: "{{ mysql57_replication_user.password }}"
    priv: "{{ mysql57_replication_user.priv | default('*.*:REPLICATION SLAVE') }}"
    config_file: "{{ mysql57_cnf }}"
    state: present
  when:  >
    (mysql57_replication_role == 'master')
    and mysql57_replication_user

- name: replication | Check slave replication status.
  mysql_replication: mode=getslave config_file={{ mysql57_cnf }}
  ignore_errors: true
  register: slave
  when: >
    (mysql57_replication_role == 'slave')
    and (mysql57_replication_master != '')

- name: replication | Check master replication status.
  mysql_replication: mode="getmaster" config_file={{ mysql57_datahome }}/{{ mysql57_replication_master_port }}/my.cnf
  delegate_to: "{{ mysql57_replication_master }}"
  register: master
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (mysql57_replication_role == 'slave')
    and (mysql57_replication_master != '')

- name: replication | Restart mysql service.
  systemd: state=restarted name={{ mysql57_servicename }}
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (mysql57_replication_role == 'slave')
    and (mysql57_replication_master != '')

- name: replication | Show master status.
  debug: var={{ master | to_json }}
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (mysql57_replication_role == 'slave')
    and (mysql57_replication_master != '')

- name: replication | Configure replication(file) on the slave.
  mysql_replication:
    mode: changemaster
    master_host: "{{ mysql57_replication_master }}"
    master_port: "{{ mysql57_replication_master_port }}"
    master_user: "{{ mysql57_replication_user.name }}"
    master_password: "{{ mysql57_replication_user.password }}"
    master_log_file: "{{ master.File }}"
    master_log_pos: "{{ master.Position }}"
    config_file: "{{ mysql57_cnf }}"
  ignore_errors: True
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (mysql57_replication_role == 'slave')
    and (mysql57_replication_master is defined and mysql57_replication_master != '')
    and mysql57_replication_mode == 'file'

- name: replication | Configure replication(gtid) on the slave.
  mysql_replication:
    mode: changemaster
    master_host: "{{ mysql57_replication_master }}"
    master_port: "{{ mysql57_replication_master_port }}"
    master_user: "{{ mysql57_replication_user.name }}"
    master_password: "{{ mysql57_replication_user.password }}"
    master_auto_position: "1"
    config_file: "{{ mysql57_cnf }}"
  ignore_errors: True
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (mysql57_replication_role == 'slave')
    and (mysql57_replication_master is defined and mysql57_replication_master != '')
    and mysql57_replication_mode == 'gtid'

- name: replication | Start replication.
  mysql_replication: mode=startslave config_file={{ mysql57_cnf }}
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (mysql57_replication_role == 'slave')
    and (mysql57_replication_master != '')
   
- name: replication | Get slave status.
  mysql_replication: mode=getslave config_file={{ mysql57_cnf }}
  ignore_errors: true
  register: slave_status
  when: >
    ((slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave|failed))
    and (mysql57_replication_role == 'slave')
    and (mysql57_replication_master != '')

- name: replication | Check slave replication status.
  debug: msg="Slave replication status is faild. Error:{{slave.Last_IO_Error}}"
  ignore_errors: true
  when: >
    mysql57_replication_role == 'slave'
    and slave_status.Slave_SQL_Running != 'Yes'
    and slave_status.Slave_IO_Running != 'Yes'
    and mysql57_replication_master != ''
