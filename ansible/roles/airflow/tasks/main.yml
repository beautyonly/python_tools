---
# author: lework

- name: Ensure packages are installed.
  yum: name={{ item }} state=installed
  with_items:
    - MySQL-python
    - mysql-devel
    - mysql-libs
    - openssl
    - openssl-devel
    - sqlite-devel

- name: Check if airflow file is already configured.
  stat: path={{ airflow_bin }}
  register: airflow_bin_result

- name: Install airflow for pip.
  pip: name={{ item }}
  with_items:
    - pysqlite
    - MySQL-python
    - airflow
  when: not airflow_bin_result.stat.exists

- name: Install airflow extra for pip.
  pip: "name=airflow[{{ item }}]"
  with_items:
   - "{{ airflow_extra }}"
  when: not airflow_bin_result.stat.exists
   
- name: Copy /usr/lib64/python2.6/lib-dynload/_sqlite3.so TO /usr/local/lib/python2.7/lib-dynload/.
  copy: src=/usr/lib64/python2.6/lib-dynload/_sqlite3.so dest=/usr/local/lib/python2.7/lib-dynload/ remote_src=True  
  ignore_errors: true  

- name: Create airflow group.
  group: name={{ airflow_user }}

- name: Create airflow user.
  user: name={{ airflow_user }} group={{ airflow_user }} shell=/sbin/nologin
  
- name: Create airflow home directory.
  file: dest={{ item }} state=directory mode=755 owner={{ airflow_user }} group={{ airflow_user }}
  with_items:
   - "{{ airflow_home }}"
   - "{{ airflow_tmpdir }}"

- name: Config environment variable.
  lineinfile: "dest=/etc/profile line='export AIRFLOW_HOME={{ airflow_home }}'"
  run_once: yes
    
- name: "Set airflow  config if configured."
  template: src=airflow.cfg.j2 dest={{ airflow_home }}/airflow.cfg

- name: Create airflow database.
  mysql_db:
    name: "{{ airflow_db }}"
    state: present
    login_host: "{{ mysql_host }}"
    login_port: "{{ mysql_port }}"
    login_user: "{{ mysql_user }}"
    login_password: "{{ mysql_password }}"
    encoding: 'utf8'
  when: create_db
    
- name: Airflow initdb.
  shell: export AIRFLOW_HOME={{ airflow_home }} && airflow initdb
  
- block:
  - name: Change Web utc time.
    replace: dest=/usr/local/lib/python2.7/site-packages/airflow/www/templates/admin/master.html regexp='\s\+\sx\.getTimezoneOffset\(\)\*60\*1000'
    
  - name: Change Web js utc time.
    replace: dest=/usr/local/lib/python2.7/site-packages/airflow/www/static/jqClock.min.js regexp=' UTC'
    
  - name: Change tree view utc time.
    replace: dest=/usr/local/lib/python2.7/site-packages/airflow/www/templates/airflow/tree.html regexp='\+7'
    
  - name: Change tree view js utc time.
    replace: dest=/usr/local/lib/python2.7/site-packages/airflow/www/static/d3.v3.min.js regexp='Qa.scale.utc' replace='Qa.scale'
    
  - name: Change gantt view utc time.
    replace: dest=/usr/local/lib/python2.7/site-packages/airflow/www/templates/airflow/gantt.html regexp='- this.point.low' replace='- this.point.low + new Date().getTimezoneOffset()*60*1000'
    
  - name: Change gantt view js utc time.
    replace: dest=/usr/local/lib/python2.7/site-packages/airflow/www/static/highcharts.js regexp='useUTC:\!0' replace='useUTC:false'
  when: change_utctime
