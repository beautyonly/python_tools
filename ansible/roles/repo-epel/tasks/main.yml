---
# author: lework

- name: Check if EPEL repo is already configured.
  stat: path={{ epel_repofile_path }}
  register: epel_repofile_result
  
- name: Install EPEL repo.
  yum:
    name: "{{ epel_repo_url }}"
    state: present
  register: result
  until: '"failed" not in result'
  retries: 5
  delay: 10
  when: not epel_repofile_result.stat.exists

- name: Import EPEL GPG key.
  rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present
  when: not epel_repofile_result.stat.exists

- name: Check if EPEL repo is already configured.
  stat: path={{ epel_repofile_path }}
  register: epel_repofile_result

- name: Check if EPEL Testing repo is already configured.
  stat: path={{ epel_testing_repofile_path }}
  register: epel_testing_repofile_result
  
- name: Change EPEL source.
  replace: dest={{ epel_repofile_path }} regexp={{ item.reg }} replace={{ item.rep }}
  with_items:
   - {'reg': '#baseurl=', 'rep': 'baseurl='}
   - {'reg': 'mirrorlist=', 'rep': '#mirrorlist='}
   - {'reg': 'http://download.fedoraproject.org/pub', 'rep': "{{ epel_source_url }}"}
  when: change_epel and epel_repofile_result.stat.exists

- name: Change EPEL Testing source.
  replace: dest={{ epel_testing_repofile_path }} regexp={{ item.reg }} replace={{ item.rep }}
  with_items:
   - {'reg': '#baseurl=', 'rep': 'baseurl='}
   - {'reg': 'mirrorlist=', 'rep': '#mirrorlist='}
   - {'reg': 'http://download.fedoraproject.org/pub', 'rep': "{{ epel_source_url }}"}
  when: change_epel and epel_testing_repofile_result.stat.exists

- name: Update yum cache.
  shell: yum clean all && yum makecache
  when: change_epel
